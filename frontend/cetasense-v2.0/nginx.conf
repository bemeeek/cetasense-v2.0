# NGINX Configuration
# - Serve static React build
# - Proxy and load-balance API requests to Go-Gateway and Python-API
# - Enable gzip compression for asset performance
# - Provide SPA fallback for client-side routing
# - Offer simple monitoring via stub_status

user nginx;  # Jalankan worker processes sebagai user 'nginx'
worker_processes auto;  # Otomatis sesuai jumlah core CPU
error_log /var/log/nginx/error.log warn;  # Log error dengan level 'warn'
pid /var/run/nginx.pid;  # Lokasi file PID

events {
    # Maksimum koneksi per worker
    worker_connections 1024;
}

http {
    # MIME types dan default
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    client_max_body_size 50M;

    # Format dan lokasi access log
    log_format main '$remote_addr -> $upstream_addr [$time_local] "\$request" '
                     '$status \$body_bytes_sent "\$http_referer" '
                     '"\$http_user_agent"';
    access_log /var/log/nginx/access.log main;

    # Optimasi I/O
    sendfile on;       # Gunakan sendfile untuk efisiensi I/O
    tcp_nopush on;     # Gabungkan paket TCP
    keepalive_timeout 65;  # Timeout keepalive untuk koneksi client

    # ===== GZIP Compression =====
    gzip on;                           # Aktifkan kompresi gzip
    gzip_min_length 1000;              # Kompresi jika response > 1KB
    gzip_types text/plain text/css application/javascript application/json text/xml application/xml image/svg+xml;  # Jenis MIME untuk dikompresi
    gzip_proxied any;                  # Kompresi untuk request lewat proxy
    gzip_vary on;                      # Tambahkan header Vary: Accept-Encoding
    gzip_comp_level 5;                 # Level kompresi (1-9)

    # Gunakan Docker embedded DNS untuk resolve name runtime
    resolver 127.0.0.11 valid=10s ipv6=off;

    # ===== Upstream Backend =====
    upstream go_gateway {
        zone go_gateway 64k;      # Shared memory untuk menyimpan state load-balancer
        keepalive 16;             # Reuse hingga 16 koneksi TCP idle
        server go_gateway:8081 resolve;  # Backend Go-Gateway
    }

    upstream py_api {
        zone py_api 64k;
        keepalive 16;
        server py_api:8000 resolve;      # Backend Python-API
    }

    # ===== Server Block =====
    server {
        listen 80 default_server;      # Dengarkan pada port 80 (IPv4)
        listen [::]:80 default_server; # Dengarkan pada port 80 (IPv6)
        server_name _;                 # wildcard server_name

        # --- 1) Proxy API ke Go-Gateway ---
        location ^~ /api/ {
            proxy_pass http://go_gateway;               # Kirim ke upstream go_gateway
            proxy_http_version 1.1;                     # Gunakan HTTP/1.1 untuk keepalive
            proxy_set_header Host $host;                # Teruskan Host header asli
            proxy_set_header X-Real-IP $remote_addr;    # IP client asli
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Chain IP header
            proxy_set_header X-Forwarded-Proto $scheme; # Scheme HTTPS/HTTP asli
            add_header X-Upstream-Addr $upstream_addr;  # Header debug upstream server
            proxy_connect_timeout 5s;                   # Timeout koneksi ke backend
            proxy_read_timeout 30s;                    # Timeout baca response
        }

        # --- 2) Proxy localize ke Python-API ---
        location ^~ /localize/ {
            proxy_pass http://py_api;                  # Kirim ke upstream py_api
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            add_header X-Upstream-Addr $upstream_addr;  # Debug header upstream
            proxy_connect_timeout 5s;
            proxy_read_timeout 30s;
        }

        # --- 3) Serve React SPA (static files + fallback) ---
        root /usr/share/nginx/html;    # Direktori build React
        index index.html;

        location / {
            # Coba serve file, jika tidak ada fallback ke index.html
            try_files $uri $uri/ /index.html;
        }

        # --- Monitoring Stub Status ---
        location /nginx_status {
            stub_status on;       # Aktifkan status singkat
            allow 127.0.0.1;      # Hanya localhost yang dapat akses
            deny all;             # Blokir IP lain
        }
    }
}