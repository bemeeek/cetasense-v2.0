services:

  nginx-loadbalancer:
      build:
        context: ./nginx-loadbalancer
        dockerfile: dockerfile
      image: nginx-loadbalancer:latest
      container_name: nginx-loadbalancer
      restart: unless-stopped
      ports:
        - "80:80"
      depends_on:
        - frontend
        - go_gateway
        - py_api
      networks:
        - app-network
      volumes:
        - nginx_logs:/var/log/nginx

  frontend:
    build:
      context: ./frontend/cetasense-v2.0
      dockerfile: dockerfile
    image: frontend-react:latest
    container_name: frontend-react
    restart: unless-stopped
    expose:
      - "80"
    networks:
      app-network:
        aliases:
          - frontend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s


  mariadb:
    image: mariadb:latest
    container_name: mariadb
    restart: unless-stopped
    volumes:
      - mariadb_data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - app-network

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    networks:
      - app-network

  redis:
    image: redis:6-alpine
    container_name: redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: rabbit
      RABBITMQ_DEFAULT_PASS: secret123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 15s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  go_gateway:
    build:
      context: ./backend
    # container_name: go_gateway_1
    image: go_gateway:latest
    restart: on-failure
    env_file:
      - ./.env
    environment:
      - APP_ENV=development
      - PORT=8081
      - DB_HOST=mariadb
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=Rafi111703
      - DB_NAME=bismillahta
    expose:
      - "8081"
    depends_on:
      - mariadb
      - minio
      - redis
      - rabbitmq
    networks:
      app-network:
        aliases:
          - go_gateway
    
  
  py_api:
    build:
      context: ./backend-localization-py
      dockerfile: dockerfile
    # container_name: py_api
    image: py_api:latest
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - DB_HOST=mariadb
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=Rafi111703
      - DB_NAME=bismillahta
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 2
    expose:
      - "8000"
    depends_on:
      - mariadb
      - minio
      - redis
      - rabbitmq
    networks:
      app-network:
        aliases:
          - py_api
  

  rabbit_consumer:
    build:
      context: ./backend-localization-py
    # container_name: rabbit_consumer
    image: rabbit_consumer:latest
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - DB_HOST=mariadb
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=Rafi111703
      - DB_NAME=bismillahta
    command: python -m app.rabbit_consumer
    depends_on:
      - rabbitmq
      - redis
      - mariadb
    networks:
      - app-network
  
  celery_worker:
    build:
      context: ./backend-localization-py
    # container_name: celery_worker
    image: celery_worker:latest
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - DB_HOST=mariadb
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=Rafi111703
      - DB_NAME=bismillahta
    command: celery -A app.tasks worker --loglevel=info --pool=prefork --concurrency=2 --hostname=worker1@%h
    depends_on:
      - rabbitmq
      - redis
      - mariadb
      - minio
    networks:
      - app-network

 
networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mariadb_data:
    driver: local
  minio_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
  nginx_logs:
    driver: local