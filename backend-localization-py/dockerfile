# Stage 1: Build dependencies
FROM python:3.13-slim AS builder

# Prevent Python from writing .pyc files
ENV PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
        build-essential \
        libpq-dev \
        curl \
    && rm -rf /var/lib/apt/lists/*

    # Create the directory for step_metrics.csv file
RUN mkdir -p /app/metrics  # Menambahkan perintah ini untuk membuat direktori

# Copy application code and requirements
COPY requirements.txt /app/
COPY . /app

# Install Python dependencies
RUN pip install --upgrade pip && pip install --no-cache-dir -r requirements.txt

# Stage 2: Runtime image
FROM python:3.13-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    APP_ENV=production \
    PORT=8000
WORKDIR /app

# Create non-root user
RUN addgroup --system appgroup && adduser --system --ingroup appgroup appuser
USER appuser

# Copy installed packages and scripts for Celery & other console tools
COPY --from=builder /usr/local/lib/python3.13/site-packages /usr/local/lib/python3.13/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy application code
COPY --from=builder /app /app

# Expose HTTP port for FastAPI
EXPOSE ${PORT}

# Healthcheck for API endpoint
HEALTHCHECK --interval=30s --timeout=5s --start-period=5s CMD \
    curl --fail http://localhost:${PORT}/health || exit 1

# Ensure Python can find the app module
ENV PYTHONPATH=/app

# Default command: Uvicorn server (override in docker-compose for Celery)
CMD ["python", "-m", "app.main"]